plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.search'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.hibernate.validator:hibernate-validator:9.0.0.Final'

	// docs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

	// search
	implementation 'com.meilisearch.sdk:meilisearch-java:0.14.4'

	// db access
	implementation 'org.postgresql:postgresql:42.7.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core'

	// observability
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation platform('io.micrometer:micrometer-bom:1.15.0')
	implementation 'io.micrometer:micrometer-tracing'
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.micrometer:micrometer-registry-otlp'

	// lombok => less weird setter/getters
	compileOnly("org.projectlombok:lombok:1.18.38")
	annotationProcessor("org.projectlombok:lombok:1.18.38")
	testCompileOnly("org.projectlombok:lombok:1.18.38")
	testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

tasks.named('test') {
	useJUnitPlatform()
}
