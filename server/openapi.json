{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/repositories/{usercode}/selection": {
      "post": {
        "tags": [
          "git-repo-controller"
        ],
        "summary": "tell the AI service which items should be included into the summary",
        "operationId": "createCommitSelectionForSummary",
        "parameters": [
          {
            "name": "usercode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelectionSubmission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Items were included in the summary",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided - please make sure that all selected content exists",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requested code does not exist",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{usercode}/question": {
      "post": {
        "tags": [
          "git-repo-controller"
        ],
        "summary": "create a question to be answered asynchronously by the ai service",
        "operationId": "createQuestion",
        "parameters": [
          {
            "name": "usercode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Question to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionSubmission"
              },
              "example": {
                "question": "Why are these developer raving about 42?"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Items were included in the summary",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requested code does not exist",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/PAT": {
      "post": {
        "tags": [
          "git-repo-controller"
        ],
        "summary": "Provide the personal access token to retrieve the secure maintainer and developer links",
        "operationId": "createFromPAT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PATConstruct"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "secure maintainer and developer links",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkConstruct"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requested code does not exist",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LinkConstruct"
                }
              }
            }
          }
        }
      }
    },
    "/api/repositories/{usercode}": {
      "get": {
        "tags": [
          "git-repo-controller"
        ],
        "summary": "Get the git repository information",
        "description": "Auth is handled via the provided UUID",
        "operationId": "getGitRepository",
        "parameters": [
          {
            "name": "usercode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get repository-content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GitRepoInformationConstruct"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Requested code does not exist",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SelectionSubmission": {
        "type": "object",
        "properties": {
          "selection": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      "QuestionSubmission": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string"
          }
        }
      },
      "PATConstruct": {
        "type": "object",
        "properties": {
          "repolink": {
            "type": "string"
          },
          "pat": {
            "type": "string"
          }
        }
      },
      "LinkConstruct": {
        "type": "object",
        "properties": {
          "developerview": {
            "type": "string"
          },
          "stakeholderview": {
            "type": "string"
          }
        }
      },
      "ContentConstruct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GitRepoInformationConstruct": {
        "type": "object",
        "properties": {
          "repoLink": {
            "type": "string"
          },
          "isMaintainer": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionConstruct"
            }
          },
          "summaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummaryConstruct"
            }
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentConstruct"
            }
          }
        }
      },
      "QuestionAnswerConstruct": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "QuestionConstruct": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionAnswerConstruct"
            }
          }
        }
      },
      "SummaryConstruct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "summary": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
