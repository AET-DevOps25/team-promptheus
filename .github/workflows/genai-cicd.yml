name: Genai CI/CD

on:
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  genai-type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install -r requirements.txt
        working-directory: genai
      - run: mypy --config-file=mypy.ini .
        working-directory: genai

  genai-linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install -r requirements.txt
        working-directory: genai
      - run: ruff check .
        working-directory: genai

  genai-test:
    runs-on: ubuntu-latest
    services:
      meilisearch:
        image: getmeili/meilisearch:latest
        ports:
          - 7700:7700
        env:
          MEILI_MASTER_KEY: CHANGE_ME_CHANGE_ME
          MEILI_ENV: development
        options: >-
          --health-cmd "curl --silent http://localhost:7700/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v6
        with:
          context: ./genai
          file: ./genai/Dockerfile
          push: false
          tags: genai-test:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=min

      - name: Wait for Meilisearch to be ready
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:7700/health; do sleep 1; done'

      - name: Run Meilisearch setup
        run: |
          docker run --rm \
            --network host \
            -e MEILISEARCH_URL=http://localhost:7700 \
            -e MEILI_MASTER_KEY=CHANGE_ME_CHANGE_ME \
            -e OLLAMA_API_KEY=${{ secrets.OLLAMA_API_KEY }} \
            ghcr.io/aet-devops25/promptheus-ms-init:main

      - name: Run tests in Docker container
        run: |
          docker run --rm \
            --network host \
            -e MEILISEARCH_URL=http://localhost:7700 \
            -e MEILI_MASTER_KEY=CHANGE_ME_CHANGE_ME \
            -e OLLAMA_BASE_URL=https://gpu.aet.cit.tum.de/ollama \
            -e OLLAMA_EMBEDDING_MODEL=tinyllama:latest \
            -e OLLAMA_API_KEY=${{ secrets.OLLAMA_API_KEY }} \
            -v ${{ github.workspace }}/genai:/app \
            -w /app \
            genai-test:latest \
            pytest -v --tb=short

  genai-build:
    uses: ./.github/workflows/_docker-build.yml
    with:
      image_suffix: genai
      context: ./genai
      dockerfile: Dockerfile
    permissions:
      id-token: write
      contents: read
      packages: write
      attestations: write
