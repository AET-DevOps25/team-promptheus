services:
  meilisearch:
    image: getmeili/meilisearch
    restart: unless-stopped
    ports:
      - 7700:7700
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-CHANGE_ME_CHANGE_ME}
      MEILI_ENV: development
    volumes:
      - meilisearch-data:/data
    healthcheck:
      test: curl --silent http://localhost:7700/health
      retries: 5
      interval: 10s
      start_period: 1s
      start_interval: 100ms
  db: 
    image: postgres:17
    restart: unless-stopped
    environment:
      TZ: Europe/Berlin
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-CHANGE_ME}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    command:
      - -c
      - synchronous_commit=off
      - -c
      - log_statement=all
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}" ]
      retries: 5
      interval: 10s
      start_period: 1s
      start_interval: 100ms
  server:
    image: ghcr.io/aet-devops25/promptheus-server:latest
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/${POSTGRES_DB:-postgres}
      spring.datasource.username: ${POSTGRES_USER:-postgres}
      spring.datasource.password: ${POSTGRES_PASSWORD:-CHANGE_ME}
      app.meiliMasterKey: ${MEILI_MASTER_KEY:-CHANGE_ME_CHANGE_ME}
      app.meiliHost: http://meilisearch:7700
      management.otlp.tracing.endpoint: http://monitoring:4318/v1/traces
      management.otlp.metrics.export.url: http://monitoring:4318/v1/metrics
      management.otlp.logging.endpoint: http://monitoring:4318/v1/logs
    build:
      context: server
    restart: unless-stopped
    ports:
      - ${SERVER_PORT:-8080}:8080
    depends_on:
      db:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
      genai:
        condition: service_started
    develop:
      watch:
        - action: rebuild
          path: ./server/build.gradle
        - action: rebuild
          path: ./server/settings.gradle
        - action: rebuild
          path: ./server/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT:-8080}/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 1s
      start_interval: 100ms
  genai:
    image: ghcr.io/aet-devops25/promptheus-genai:latest
    build:
      context: ./genai
    ports:
      - "${GENAI_PORT:-3003}:${GENAI_PORT:-3003}"
    environment:
      - GENAI_PORT=${GENAI_PORT:-3003}
      - MEILISEARCH_URL=http://meilisearch:7700
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-CHANGE_ME_CHANGE_ME}
      - OTEL_EXPORTER_OTLP_ENDPOINT="http://monitoring:4317"
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT="http://monitoring:4317/v1/traces"
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT="http://monitoring:4317/v1/metrics"
      - OTEL_EXPORTER_OTLP_LOGGING_ENDPOINT="http://monitoring:4317/v1/logs"
      - OTEL_SERVICE_NAME="genai"
      - OTEL_EXPORTER_OTLP_TIMEOUT=5 # in seconds
      - OTEL_TRACES_SAMPLER="always_on"
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_METRICS_EXEMPLAR_FILTER=always_on
      - OTEL_LOG_LEVEL="debug"
    env_file:
      - ./genai/.env
    command: sh -c "python scripts/setup_meilisearch.py && uvicorn app:app --host 0.0.0.0 --port ${GENAI_PORT:-3003} --reload"
    develop:
      watch:
        - action: rebuild
          path: ./genai/requirements.txt
        - action: sync
          path: ./genai
          target: /app
          ignore:
            - __pycache__
            - "*.pyc"
            - .pytest_cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${GENAI_PORT:-3003}/health"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 1s
      start_interval: 100ms
    depends_on:
      db:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
  contribution-service:
    image: ghcr.io/aet-devops25/promptheus-contribution-service:latest
    build:
      context: ./contribution-service
    ports:
      - 8082:8082
    restart: unless-stopped
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/${POSTGRES_DB:-postgres}
      spring.datasource.username: ${POSTGRES_USER:-postgres}
      spring.datasource.password: ${POSTGRES_PASSWORD:-CHANGE_ME}
      app.meiliMasterKey: ${MEILI_MASTER_KEY:-CHANGE_ME_CHANGE_ME}
      app.meiliHost: http://meilisearch:7700
      management.otlp.tracing.endpoint: http://monitoring:4318/v1/traces
      management.otlp.metrics.export.url: http://monitoring:4318/v1/metrics
      management.otlp.logging.endpoint: http://monitoring:4318/v1/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 1s
      start_interval: 100ms
    depends_on:
      db:
        condition: service_healthy
      meilisearch:
        condition: service_healthy

  client:
    image: ghcr.io/aet-devops25/promptheus-client:latest
    build:
      context: frontend
    ports:
      - 8081:${CLIENT_PORT:-8081}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "-e 'fetch(`http://localhost:${CLIENT_PORT:-8081}/`).then(x=>x.status==200?process.exit(0):process.exit(1)).catch(()=>process.exit(1))'"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 1s
      start_interval: 100ms
    develop:
      watch:
        - action: rebuild
          path: ./client/package.json
        - action: rebuild
          path: ./client/package-lock.json
        - action: rebuild
          path: ./client/vite.config.ts
        - action: rebuild
          path: ./client/tsconfig.json
        - action: rebuild
          path: ./client/components.json
        - action: rebuild
          path: ./client/vite.config.ts
        - action: rebuild
          path: ./client/src
        - action: rebuild
          path: ./client/public
  monitoring:
    image: grafana/otel-lgtm:latest
    ports:
      - 3000:3000
      - 4317:4317
      - 4318:4318
    volumes:
      - grafana-data:/data/grafana
      - prometheus-data:/data/prometheus
      - loki-data:/data/loki
    environment:
      GF_PATHS_DATA: /data/grafana
volumes:
  prometheus-data:
  grafana-data:
  loki-data:
  postgres-data:
  meilisearch-data:
