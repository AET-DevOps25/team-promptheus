{{- if .Values.monitoring.loki.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: "{{ $.Release.Namespace }}"
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      securityContext:
        fsGroup: 10001
        runAsUser: 10001
        runAsGroup: 10001
      containers:
        - name: loki
          image: grafana/loki:latest
          ports:
            - containerPort: 3100
              name: http
          args:
            - '-config.file=/etc/loki/local-config.yaml'
          readinessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
            periodSeconds: 30
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki
              readOnly: true
            - name: loki-storage
              mountPath: /loki
              {{- if .Values.monitoring.loki.persistence.enabled }}
              subPath: loki
              {{- end }}
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
            defaultMode: 0644
        - name: loki-storage
          {{- if .Values.monitoring.loki.persistence.enabled }}
          persistentVolumeClaim:
            claimName: loki-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: loki-service
  namespace: "{{ $.Release.Namespace }}"
  labels:
    app: loki
spec:
  type: ClusterIP
  ports:
    - port: 3100
      targetPort: 3100
      protocol: TCP
      name: http
  selector:
    app: loki

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: "{{ $.Release.Namespace }}"
  labels:
    app: loki
data:
  local-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096

    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100

    schema_config:
      configs:
        - from: 2020-10-24
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: index_
            period: 24h

    ruler:
      alertmanager_url: http://localhost:9093

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      allow_structured_metadata: false

    compactor:
      working_directory: /loki
      compaction_interval: 10m
      retention_enabled: false
      retention_delete_delay: 2h
      retention_delete_worker_count: 150

    analytics:
      reporting_enabled: false
{{- end }}
