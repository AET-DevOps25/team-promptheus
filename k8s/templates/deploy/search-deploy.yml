apiVersion: apps/v1
kind: Deployment
metadata:
  name: search
  namespace: {{$.Release.Namespace}}
spec:
  replicas: {{.Values.defaultReplicas}}
  selector:
    matchLabels:
      app: search
  template:
    metadata:
      labels:
        app: search
    spec:
      initContainers:
        - name: init
          imagePullPolicy: Always
          image: ghcr.io/aet-devops25/promptheus-ms-init:main
          env:
            - name: MEILISEARCH_URL
              value: http://meilisearch-service:7700
            - name: OLLAMA_BASE_URL
              value: https://gpu.aet.cit.tum.de/ollama
            - name: OLLAMA_EMBEDDING_MODEL
              value: tinyllama:latest
            - name: MEILI_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MEILI_MASTER_KEY
      containers:
        - name: search
          imagePullPolicy: Always
          image: ghcr.io/aet-devops25/promptheus-search:main
          ports:
            - containerPort: 8070
            - containerPort: 8071
              name: management
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false # JIT requires writing
            runAsUser: 1000
            runAsGroup: 1000
            privileged: false
          env:
            # secrets
            - name: spring.datasource.url
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: spring.datasource.url
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_USER
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: app.meiliMasterKey
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MEILI_MASTER_KEY
            # routing
            - name: app.meiliHost
              value: http://meilisearch-service:7700
            - name: management.otlp.tracing.endpoint
              value: http://otel-collector-service:4318/v1/traces
            - name: management.otlp.metrics.export.url
              value: http://otel-collector-service:4318/v1/metrics
            - name: management.otlp.logging.endpoint
              value: http://otel-collector-service:4318/v1/logs
            # Spring Boot profiling configuration for Pyroscope
            - name: management.endpoints.web.exposure.include
              value: "health,info,metrics,prometheus,threaddump,heapdump"
            - name: management.endpoint.threaddump.enabled
              value: "true"
            - name: management.endpoint.heapdump.enabled
              value: "true"
            - name: management.server.port
              value: "8071"
            - name: PYROSCOPE_APPLICATION_NAME
              value: search
            - name: PYROSCOPE_SERVER_ADDRESS
              value: http://pyroscope-service.{{ $.Release.Namespace }}.svc.cluster.local:4040
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8070
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 5
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8070
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 5
