{
	"components": {
		"schemas": {
			"ContentConstruct": {
				"properties": {
					"createdAt": { "format": "date-time", "type": "string" },
					"id": { "type": "string" },
					"summary": { "type": "string" },
					"type": { "type": "string" },
					"user": { "type": "string" }
				},
				"type": "object"
			},
			"FacetRating": {
				"properties": {
					"max": { "format": "double", "type": "number" },
					"min": { "format": "double", "type": "number" }
				},
				"type": "object"
			},
			"GitRepoInformationConstruct": {
				"properties": {
					"contents": {
						"items": { "$ref": "#/components/schemas/ContentConstruct" },
						"type": "array"
					},
					"createdAt": { "format": "date-time", "type": "string" },
					"isMaintainer": { "type": "boolean" },
					"questions": {
						"items": { "$ref": "#/components/schemas/QuestionConstruct" },
						"type": "array"
					},
					"repoLink": { "type": "string" },
					"summaries": {
						"items": { "$ref": "#/components/schemas/SummaryConstruct" },
						"type": "array"
					}
				},
				"type": "object"
			},
			"LinkConstruct": {
				"properties": {
					"developerview": { "type": "string" },
					"stakeholderview": { "type": "string" }
				},
				"type": "object"
			},
			"PATConstruct": {
				"properties": {
					"pat": { "type": "string" },
					"repolink": { "type": "string" }
				},
				"type": "object"
			},
			"QuestionAnswerConstruct": {
				"properties": {
					"answer": { "type": "string" },
					"createdAt": { "format": "date-time", "type": "string" }
				},
				"type": "object"
			},
			"QuestionConstruct": {
				"properties": {
					"answers": {
						"items": { "$ref": "#/components/schemas/QuestionAnswerConstruct" },
						"type": "array"
					},
					"createdAt": { "format": "date-time", "type": "string" },
					"question": { "type": "string" }
				},
				"type": "object"
			},
			"QuestionSubmission": {
				"properties": { "question": { "type": "string" } },
				"type": "object"
			},
			"SearchResult": {
				"properties": {
					"estimatedTotalHits": { "format": "int32", "type": "integer" },
					"facetDistribution": {},
					"facetStats": {
						"additionalProperties": {
							"$ref": "#/components/schemas/FacetRating"
						},
						"type": "object"
					},
					"hits": {
						"items": { "additionalProperties": {}, "type": "object" },
						"type": "array"
					},
					"limit": { "format": "int32", "type": "integer" },
					"offset": { "format": "int32", "type": "integer" },
					"processingTimeMs": { "format": "int32", "type": "integer" },
					"query": { "type": "string" }
				},
				"type": "object"
			},
			"SelectionSubmission": {
				"properties": {
					"selection": {
						"items": { "type": "string" },
						"type": "array",
						"uniqueItems": true
					}
				},
				"type": "object"
			},
			"SummaryConstruct": {
				"properties": {
					"createdAt": { "format": "date-time", "type": "string" },
					"id": { "format": "int64", "type": "integer" },
					"summary": { "type": "string" }
				},
				"type": "object"
			}
		}
	},
	"info": { "title": "OpenAPI definition", "version": "v0" },
	"openapi": "3.1.0",
	"paths": {
		"/api/repositories/{usercode}": {
			"get": {
				"description": "Auth is handled via the provided UUID",
				"operationId": "getGitRepository",
				"parameters": [
					{
						"in": "path",
						"name": "usercode",
						"required": true,
						"schema": { "format": "uuid", "type": "string" }
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GitRepoInformationConstruct"
								}
							}
						},
						"description": "get repository-content"
					},
					"403": {
						"content": { "text/plain": { "schema": { "type": "string" } } },
						"description": "Forbidden - Requested code does not exist"
					}
				},
				"summary": "Get the git repository information",
				"tags": ["git-repo-controller"]
			}
		},
		"/api/repositories/{usercode}/question": {
			"post": {
				"operationId": "createQuestion",
				"parameters": [
					{
						"in": "path",
						"name": "usercode",
						"required": true,
						"schema": { "format": "uuid", "type": "string" }
					}
				],
				"requestBody": {
					"content": {
						"text/plain": {
							"example": {
								"question": "Why are these developer raving about 42?"
							},
							"schema": { "$ref": "#/components/schemas/QuestionSubmission" }
						}
					},
					"description": "Question to create",
					"required": true
				},
				"responses": {
					"200": {
						"content": { "text/plain": { "schema": { "type": "string" } } },
						"description": "Items were included in the summary"
					},
					"403": {
						"content": { "*/*": { "schema": { "type": "string" } } },
						"description": "Forbidden - Requested code does not exist"
					}
				},
				"summary": "create a question to be answered asynchronously by the ai service",
				"tags": ["git-repo-controller"]
			}
		},
		"/api/repositories/{usercode}/search": {
			"get": {
				"operationId": "search",
				"parameters": [
					{
						"in": "path",
						"name": "usercode",
						"required": true,
						"schema": { "format": "uuid", "type": "string" }
					},
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": { "minLength": 1, "type": "string" }
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SearchResult" }
							}
						},
						"description": "searched repository-content"
					},
					"403": {
						"content": { "text/plain": { "schema": { "type": "string" } } },
						"description": "Forbidden - Requested code does not exist"
					}
				},
				"summary": "allows searching the repository's content",
				"tags": ["git-repo-controller"]
			}
		},
		"/api/repositories/{usercode}/selection": {
			"post": {
				"operationId": "createCommitSelectionForSummary",
				"parameters": [
					{
						"in": "path",
						"name": "usercode",
						"required": true,
						"schema": { "format": "uuid", "type": "string" }
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/SelectionSubmission" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": { "text/plain": { "schema": { "type": "string" } } },
						"description": "Items were included in the summary"
					},
					"400": {
						"content": { "text/plain": { "schema": { "type": "string" } } },
						"description": "Invalid input provided - please make sure that all selected content exists"
					},
					"403": {
						"content": { "text/plain": { "schema": { "type": "string" } } },
						"description": "Forbidden - Requested code does not exist"
					}
				},
				"summary": "tell the AI service which items should be included into the summary",
				"tags": ["git-repo-controller"]
			}
		},
		"/api/repositories/PAT": {
			"post": {
				"operationId": "createFromPAT",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PATConstruct" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/LinkConstruct" }
							}
						},
						"description": "secure maintainer and developer links"
					},
					"403": {
						"content": {
							"*/*": {
								"schema": { "$ref": "#/components/schemas/LinkConstruct" }
							}
						},
						"description": "Forbidden - Requested code does not exist"
					}
				},
				"summary": "Provide the personal access token to retrieve the secure maintainer and developer links",
				"tags": ["git-repo-controller"]
			}
		},
		"/api/repositories/ping": {
			"get": {
				"operationId": "testping",
				"responses": {
					"200": {
						"content": { "*/*": { "schema": { "type": "string" } } },
						"description": "OK"
					}
				},
				"tags": ["git-repo-controller"]
			}
		},
		"/api/repositories/pingpost": {
			"post": {
				"operationId": "testpong",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PATConstruct" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": { "*/*": { "schema": { "type": "string" } } },
						"description": "OK"
					}
				},
				"tags": ["git-repo-controller"]
			}
		}
	},
	"servers": [
		{ "description": "Generated server url", "url": "http://localhost:8080" }
	]
}
