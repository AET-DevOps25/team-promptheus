{{- $hostName := .Values.ingress.domain | required "ingress.domain is required." -}}
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: team-promptheus-prometheus
  namespace: {{ $.Release.Namespace }}
  labels:
    app: prometheus
    component: prometheus-server
spec:
  replicas: 1
  retention: 7d

  # Service account
  serviceAccountName: prometheus-team-promptheus-prometheus

  # Resource requirements
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

  # Storage configuration
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"

  # Service monitor selector - select all ServiceMonitors in this namespace
  serviceMonitorSelector:
    matchLabels:
      release: {{ $.Release.Name }}

  # Rule selector - select all PrometheusRules in this namespace
  ruleSelector:
    matchLabels:
      app: prometheus
      role: alert-rules

  # Pod monitor selector for additional pod monitoring
  podMonitorSelector:
    matchLabels:
      release: {{ $.Release.Name }}

  # Alerting configuration
  alerting:
    alertmanagers:
      - namespace: {{ $.Release.Namespace }}
        name: alertmanager-operated
        port: web

  # Security context
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000

  # Web configuration
  web:
    pageTitle: "Team Promptheus Prometheus"

  # Enable admin API for management
  enableAdminAPI: false

  # Log level
  logLevel: info

  # Evaluation interval
  evaluationInterval: 30s

  # Scrape interval
  scrapeInterval: 30s

  externalUrl: https://$hostName/prometheus

  # Remote write configuration (optional - for long-term storage)
  # remoteWrite:
  #   - url: "https://prometheus-remote-write-endpoint"
  #     writeRelabelConfigs:
  #       - sourceLabels: [__name__]
  #         regex: "prometheus_.*|up|container_.*"
  #         action: keep
