name: Docker Compose Healthcheck

on:
  push:
    branches:
      - "**"

jobs:
  docker-compose-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build services
        run: |
          touch .env
          docker compose build

      - name: Start services in detached mode
        run: docker compose up -d
        env:
          OLLAMA_API_KEY: ${{ secrets.OLLAMA_API_KEY }}

      - name: Wait for services to initialize
        run: |
          elapsed=0
          while true; do
            echo "[HEALTH_CHECK] Status check at ${elapsed}s elapsed"

            # Get all containers with their status
            echo "[CONTAINER_STATUS] Current container states:"
            docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'

            # Check for unhealthy containers
            unhealthy=$(docker ps --format '{{.Names}} {{.Status}}' | grep -v 'healthy' | grep 'health' || true)

            if [ -z "$unhealthy" ]; then
              echo "[SUCCESS] All containers reached healthy state after ${elapsed}s"
              echo "[FINAL_STATUS] Container health verification complete:"
              docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'
              exit 0
            fi

            echo "[WARNING] Unhealthy containers detected:"
            echo "$unhealthy"

            echo "[WAIT] ${elapsed}s/300s elapsed, continuing health check..."
            sleep 10
            elapsed=$((elapsed + 10))

            if [ $elapsed -ge 300 ]; then
              echo "[TIMEOUT] Health check timeout reached after 300s"
              echo "[FAILURE] Final unhealthy container list:"
              echo "$unhealthy"
              echo "[FINAL_STATUS] Complete container state:"
              docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'
              echo "[DEBUG] Full container logs for analysis:"
              docker compose logs --tail=20
              exit 1
            fi
          done
